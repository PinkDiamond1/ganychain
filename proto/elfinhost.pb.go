// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: elfinhost.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bulletin_BulletinType int32

const (
	Bulletin_COMMENT Bulletin_BulletinType = 0
	Bulletin_COLUMN  Bulletin_BulletinType = 1
	Bulletin_BLOG    Bulletin_BulletinType = 2
	Bulletin_MESSAGE Bulletin_BulletinType = 3
	Bulletin_CENSOR  Bulletin_BulletinType = 4
)

// Enum value maps for Bulletin_BulletinType.
var (
	Bulletin_BulletinType_name = map[int32]string{
		0: "COMMENT",
		1: "COLUMN",
		2: "BLOG",
		3: "MESSAGE",
		4: "CENSOR",
	}
	Bulletin_BulletinType_value = map[string]int32{
		"COMMENT": 0,
		"COLUMN":  1,
		"BLOG":    2,
		"MESSAGE": 3,
		"CENSOR":  4,
	}
)

func (x Bulletin_BulletinType) Enum() *Bulletin_BulletinType {
	p := new(Bulletin_BulletinType)
	*p = x
	return p
}

func (x Bulletin_BulletinType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bulletin_BulletinType) Descriptor() protoreflect.EnumDescriptor {
	return file_elfinhost_proto_enumTypes[0].Descriptor()
}

func (Bulletin_BulletinType) Type() protoreflect.EnumType {
	return &file_elfinhost_proto_enumTypes[0]
}

func (x Bulletin_BulletinType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bulletin_BulletinType.Descriptor instead.
func (Bulletin_BulletinType) EnumDescriptor() ([]byte, []int) {
	return file_elfinhost_proto_rawDescGZIP(), []int{1, 0}
}

type StochasticPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorPubkeyHashRoot []byte `protobuf:"bytes,1,opt,name=validator_pubkey_hash_root,json=validatorPubkeyHashRoot,proto3" json:"validator_pubkey_hash_root,omitempty"`
	DueTime                 int64  `protobuf:"varint,2,opt,name=due_time,json=dueTime,proto3" json:"due_time,omitempty"`
	Probability             uint32 `protobuf:"varint,3,opt,name=probability,proto3" json:"probability,omitempty"`
	Nonces                  []byte `protobuf:"bytes,4,opt,name=nonces,proto3" json:"nonces,omitempty"`
	Payee                   []byte `protobuf:"bytes,5,opt,name=payee,proto3" json:"payee,omitempty"`
	AmountToPayee           []byte `protobuf:"bytes,6,opt,name=amount_to_payee,json=amountToPayee,proto3" json:"amount_to_payee,omitempty"`
	AmountToValidator       []byte `protobuf:"bytes,7,opt,name=amount_to_validator,json=amountToValidator,proto3" json:"amount_to_validator,omitempty"`
	Signature               []byte `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *StochasticPayment) Reset() {
	*x = StochasticPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elfinhost_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StochasticPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StochasticPayment) ProtoMessage() {}

func (x *StochasticPayment) ProtoReflect() protoreflect.Message {
	mi := &file_elfinhost_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StochasticPayment.ProtoReflect.Descriptor instead.
func (*StochasticPayment) Descriptor() ([]byte, []int) {
	return file_elfinhost_proto_rawDescGZIP(), []int{0}
}

func (x *StochasticPayment) GetValidatorPubkeyHashRoot() []byte {
	if x != nil {
		return x.ValidatorPubkeyHashRoot
	}
	return nil
}

func (x *StochasticPayment) GetDueTime() int64 {
	if x != nil {
		return x.DueTime
	}
	return 0
}

func (x *StochasticPayment) GetProbability() uint32 {
	if x != nil {
		return x.Probability
	}
	return 0
}

func (x *StochasticPayment) GetNonces() []byte {
	if x != nil {
		return x.Nonces
	}
	return nil
}

func (x *StochasticPayment) GetPayee() []byte {
	if x != nil {
		return x.Payee
	}
	return nil
}

func (x *StochasticPayment) GetAmountToPayee() []byte {
	if x != nil {
		return x.AmountToPayee
	}
	return nil
}

func (x *StochasticPayment) GetAmountToValidator() []byte {
	if x != nil {
		return x.AmountToValidator
	}
	return nil
}

func (x *StochasticPayment) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Bulletin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          Bulletin_BulletinType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.Bulletin_BulletinType" json:"type,omitempty"`
	Topic         []byte                `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Timestamp     int64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Duration      int64                 `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	OldSn         []byte                `protobuf:"bytes,5,opt,name=old_sn,json=oldSn,proto3,oneof" json:"old_sn,omitempty"`
	From          []byte                `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	ContentType   string                `protobuf:"bytes,7,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	ContentList   [][]byte              `protobuf:"bytes,8,rep,name=content_list,json=contentList,proto3" json:"content_list,omitempty"`
	CensoredStart int64                 `protobuf:"varint,9,opt,name=censored_start,json=censoredStart,proto3" json:"censored_start,omitempty"`
	CensoredEnd   int64                 `protobuf:"varint,10,opt,name=censored_end,json=censoredEnd,proto3" json:"censored_end,omitempty"`
}

func (x *Bulletin) Reset() {
	*x = Bulletin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elfinhost_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bulletin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bulletin) ProtoMessage() {}

func (x *Bulletin) ProtoReflect() protoreflect.Message {
	mi := &file_elfinhost_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bulletin.ProtoReflect.Descriptor instead.
func (*Bulletin) Descriptor() ([]byte, []int) {
	return file_elfinhost_proto_rawDescGZIP(), []int{1}
}

func (x *Bulletin) GetType() Bulletin_BulletinType {
	if x != nil {
		return x.Type
	}
	return Bulletin_COMMENT
}

func (x *Bulletin) GetTopic() []byte {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *Bulletin) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Bulletin) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Bulletin) GetOldSn() []byte {
	if x != nil {
		return x.OldSn
	}
	return nil
}

func (x *Bulletin) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Bulletin) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Bulletin) GetContentList() [][]byte {
	if x != nil {
		return x.ContentList
	}
	return nil
}

func (x *Bulletin) GetCensoredStart() int64 {
	if x != nil {
		return x.CensoredStart
	}
	return 0
}

func (x *Bulletin) GetCensoredEnd() int64 {
	if x != nil {
		return x.CensoredEnd
	}
	return 0
}

type AndOfConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionNumbers []int32 `protobuf:"varint,1,rep,packed,name=condition_numbers,json=conditionNumbers,proto3" json:"condition_numbers,omitempty"`
}

func (x *AndOfConditions) Reset() {
	*x = AndOfConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elfinhost_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndOfConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndOfConditions) ProtoMessage() {}

func (x *AndOfConditions) ProtoReflect() protoreflect.Message {
	mi := &file_elfinhost_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndOfConditions.ProtoReflect.Descriptor instead.
func (*AndOfConditions) Descriptor() ([]byte, []int) {
	return file_elfinhost_proto_rawDescGZIP(), []int{2}
}

func (x *AndOfConditions) GetConditionNumbers() []int32 {
	if x != nil {
		return x.ConditionNumbers
	}
	return nil
}

type AuthChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicSetChallengeList []*DynamicSetChallenge    `protobuf:"bytes,1,rep,name=dynamic_set_challenge_list,json=dynamicSetChallengeList,proto3" json:"dynamic_set_challenge_list,omitempty"`
	StaticSetChallengeList  []*StaticSetChallenge     `protobuf:"bytes,2,rep,name=static_set_challenge_list,json=staticSetChallengeList,proto3" json:"static_set_challenge_list,omitempty"`
	StochasticPayCondList   []*StochasticPayCondition `protobuf:"bytes,3,rep,name=stochastic_pay_cond_list,json=stochasticPayCondList,proto3" json:"stochastic_pay_cond_list,omitempty"`
	OrOfAndOfConditions     []*AndOfConditions        `protobuf:"bytes,4,rep,name=or_of_and_of_conditions,json=orOfAndOfConditions,proto3" json:"or_of_and_of_conditions,omitempty"`
}

func (x *AuthChallenge) Reset() {
	*x = AuthChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elfinhost_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthChallenge) ProtoMessage() {}

func (x *AuthChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_elfinhost_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthChallenge.ProtoReflect.Descriptor instead.
func (*AuthChallenge) Descriptor() ([]byte, []int) {
	return file_elfinhost_proto_rawDescGZIP(), []int{3}
}

func (x *AuthChallenge) GetDynamicSetChallengeList() []*DynamicSetChallenge {
	if x != nil {
		return x.DynamicSetChallengeList
	}
	return nil
}

func (x *AuthChallenge) GetStaticSetChallengeList() []*StaticSetChallenge {
	if x != nil {
		return x.StaticSetChallengeList
	}
	return nil
}

func (x *AuthChallenge) GetStochasticPayCondList() []*StochasticPayCondition {
	if x != nil {
		return x.StochasticPayCondList
	}
	return nil
}

func (x *AuthChallenge) GetOrOfAndOfConditions() []*AndOfConditions {
	if x != nil {
		return x.OrOfAndOfConditions
	}
	return nil
}

type DynamicSetChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId           []byte `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	TargetContract    []byte `protobuf:"bytes,2,opt,name=target_contract,json=targetContract,proto3" json:"target_contract,omitempty"`
	FunctionSelector  uint32 `protobuf:"varint,3,opt,name=function_selector,json=functionSelector,proto3" json:"function_selector,omitempty"`
	OutData           []byte `protobuf:"bytes,4,opt,name=out_data,json=outData,proto3" json:"out_data,omitempty"`
	Authenticator     []byte `protobuf:"bytes,5,opt,name=authenticator,proto3" json:"authenticator,omitempty"`
	MaxTimeDifference int64  `protobuf:"varint,6,opt,name=max_time_difference,json=maxTimeDifference,proto3" json:"max_time_difference,omitempty"`
}

func (x *DynamicSetChallenge) Reset() {
	*x = DynamicSetChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elfinhost_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSetChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSetChallenge) ProtoMessage() {}

func (x *DynamicSetChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_elfinhost_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSetChallenge.ProtoReflect.Descriptor instead.
func (*DynamicSetChallenge) Descriptor() ([]byte, []int) {
	return file_elfinhost_proto_rawDescGZIP(), []int{4}
}

func (x *DynamicSetChallenge) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *DynamicSetChallenge) GetTargetContract() []byte {
	if x != nil {
		return x.TargetContract
	}
	return nil
}

func (x *DynamicSetChallenge) GetFunctionSelector() uint32 {
	if x != nil {
		return x.FunctionSelector
	}
	return 0
}

func (x *DynamicSetChallenge) GetOutData() []byte {
	if x != nil {
		return x.OutData
	}
	return nil
}

func (x *DynamicSetChallenge) GetAuthenticator() []byte {
	if x != nil {
		return x.Authenticator
	}
	return nil
}

func (x *DynamicSetChallenge) GetMaxTimeDifference() int64 {
	if x != nil {
		return x.MaxTimeDifference
	}
	return 0
}

type StaticSetChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root []byte `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *StaticSetChallenge) Reset() {
	*x = StaticSetChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elfinhost_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticSetChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticSetChallenge) ProtoMessage() {}

func (x *StaticSetChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_elfinhost_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticSetChallenge.ProtoReflect.Descriptor instead.
func (*StaticSetChallenge) Descriptor() ([]byte, []int) {
	return file_elfinhost_proto_rawDescGZIP(), []int{5}
}

func (x *StaticSetChallenge) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

type StochasticPayCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payee       []byte `protobuf:"bytes,1,opt,name=payee,proto3" json:"payee,omitempty"`
	Probability uint32 `protobuf:"varint,2,opt,name=probability,proto3" json:"probability,omitempty"`
	Amount      []byte `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *StochasticPayCondition) Reset() {
	*x = StochasticPayCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elfinhost_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StochasticPayCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StochasticPayCondition) ProtoMessage() {}

func (x *StochasticPayCondition) ProtoReflect() protoreflect.Message {
	mi := &file_elfinhost_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StochasticPayCondition.ProtoReflect.Descriptor instead.
func (*StochasticPayCondition) Descriptor() ([]byte, []int) {
	return file_elfinhost_proto_rawDescGZIP(), []int{6}
}

func (x *StochasticPayCondition) GetPayee() []byte {
	if x != nil {
		return x.Payee
	}
	return nil
}

func (x *StochasticPayCondition) GetProbability() uint32 {
	if x != nil {
		return x.Probability
	}
	return 0
}

func (x *StochasticPayCondition) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type AuthProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicSetProofList   []*DynamicSetProof        `protobuf:"bytes,1,rep,name=dynamic_set_proof_list,json=dynamicSetProofList,proto3" json:"dynamic_set_proof_list,omitempty"`
	StaticSetProofList    []*StaticSetProof         `protobuf:"bytes,2,rep,name=static_set_proof_list,json=staticSetProofList,proto3" json:"static_set_proof_list,omitempty"`
	StochasticPayCondList []*StochasticPayCondition `protobuf:"bytes,3,rep,name=stochastic_pay_cond_list,json=stochasticPayCondList,proto3" json:"stochastic_pay_cond_list,omitempty"`
	OrOfAndOfConditions   []*AndOfConditions        `protobuf:"bytes,4,rep,name=or_of_and_of_conditions,json=orOfAndOfConditions,proto3" json:"or_of_and_of_conditions,omitempty"`
}

func (x *AuthProof) Reset() {
	*x = AuthProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elfinhost_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthProof) ProtoMessage() {}

func (x *AuthProof) ProtoReflect() protoreflect.Message {
	mi := &file_elfinhost_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthProof.ProtoReflect.Descriptor instead.
func (*AuthProof) Descriptor() ([]byte, []int) {
	return file_elfinhost_proto_rawDescGZIP(), []int{7}
}

func (x *AuthProof) GetDynamicSetProofList() []*DynamicSetProof {
	if x != nil {
		return x.DynamicSetProofList
	}
	return nil
}

func (x *AuthProof) GetStaticSetProofList() []*StaticSetProof {
	if x != nil {
		return x.StaticSetProofList
	}
	return nil
}

func (x *AuthProof) GetStochasticPayCondList() []*StochasticPayCondition {
	if x != nil {
		return x.StochasticPayCondList
	}
	return nil
}

func (x *AuthProof) GetOrOfAndOfConditions() []*AndOfConditions {
	if x != nil {
		return x.OrOfAndOfConditions
	}
	return nil
}

type DynamicSetProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId                []byte `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	TargetContract         []byte `protobuf:"bytes,2,opt,name=target_contract,json=targetContract,proto3" json:"target_contract,omitempty"`
	FunctionSelector       uint32 `protobuf:"varint,3,opt,name=function_selector,json=functionSelector,proto3" json:"function_selector,omitempty"`
	OutData                []byte `protobuf:"bytes,4,opt,name=out_data,json=outData,proto3" json:"out_data,omitempty"`
	Authenticator          []byte `protobuf:"bytes,5,opt,name=authenticator,proto3" json:"authenticator,omitempty"`
	MaxTimeDifference      int64  `protobuf:"varint,6,opt,name=max_time_difference,json=maxTimeDifference,proto3" json:"max_time_difference,omitempty"`
	Timestamp              int64  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AuthenticatorSignature []byte `protobuf:"bytes,8,opt,name=authenticator_signature,json=authenticatorSignature,proto3,oneof" json:"authenticator_signature,omitempty"`
}

func (x *DynamicSetProof) Reset() {
	*x = DynamicSetProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elfinhost_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicSetProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSetProof) ProtoMessage() {}

func (x *DynamicSetProof) ProtoReflect() protoreflect.Message {
	mi := &file_elfinhost_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSetProof.ProtoReflect.Descriptor instead.
func (*DynamicSetProof) Descriptor() ([]byte, []int) {
	return file_elfinhost_proto_rawDescGZIP(), []int{8}
}

func (x *DynamicSetProof) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *DynamicSetProof) GetTargetContract() []byte {
	if x != nil {
		return x.TargetContract
	}
	return nil
}

func (x *DynamicSetProof) GetFunctionSelector() uint32 {
	if x != nil {
		return x.FunctionSelector
	}
	return 0
}

func (x *DynamicSetProof) GetOutData() []byte {
	if x != nil {
		return x.OutData
	}
	return nil
}

func (x *DynamicSetProof) GetAuthenticator() []byte {
	if x != nil {
		return x.Authenticator
	}
	return nil
}

func (x *DynamicSetProof) GetMaxTimeDifference() int64 {
	if x != nil {
		return x.MaxTimeDifference
	}
	return 0
}

func (x *DynamicSetProof) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DynamicSetProof) GetAuthenticatorSignature() []byte {
	if x != nil {
		return x.AuthenticatorSignature
	}
	return nil
}

type StaticSetProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root  []byte   `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Proof [][]byte `protobuf:"bytes,2,rep,name=proof,proto3" json:"proof,omitempty"`
}

func (x *StaticSetProof) Reset() {
	*x = StaticSetProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elfinhost_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticSetProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticSetProof) ProtoMessage() {}

func (x *StaticSetProof) ProtoReflect() protoreflect.Message {
	mi := &file_elfinhost_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticSetProof.ProtoReflect.Descriptor instead.
func (*StaticSetProof) Descriptor() ([]byte, []int) {
	return file_elfinhost_proto_rawDescGZIP(), []int{9}
}

func (x *StaticSetProof) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *StaticSetProof) GetProof() [][]byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

var File_elfinhost_proto protoreflect.FileDescriptor

var file_elfinhost_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x6c, 0x66, 0x69, 0x6e, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x02, 0x0a, 0x11, 0x53, 0x74, 0x6f,
	0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b,
	0x0a, 0x1a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x75, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64,
	0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x70, 0x61, 0x79, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x50, 0x61, 0x79, 0x65, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x6f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xa3, 0x03, 0x0a,
	0x08, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x2e, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x06, 0x6f,
	0x6c, 0x64, 0x5f, 0x73, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x6f,
	0x6c, 0x64, 0x53, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x22, 0x4a, 0x0a, 0x0c, 0x42,
	0x75, 0x6c, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4c, 0x55,
	0x4d, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4c, 0x4f, 0x47, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x45, 0x4e, 0x53, 0x4f, 0x52, 0x10, 0x04, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x6c, 0x64, 0x5f,
	0x73, 0x6e, 0x22, 0x3e, 0x0a, 0x0f, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x22, 0xe4, 0x02, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x12, 0x57, 0x0a, 0x1a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x52, 0x17, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x54, 0x0a,
	0x19, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x16, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x18, 0x73, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74,
	0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x73, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63,
	0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x17, 0x6f,
	0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x6f, 0x72, 0x4f, 0x66, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf7, 0x01, 0x0a, 0x13, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x68, 0x0a,
	0x16, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x50, 0x61, 0x79, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc8, 0x02, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x4b, 0x0a, 0x16, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x13, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x48, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x18,
	0x73, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x73,
	0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x17, 0x6f, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x6e,
	0x64, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e,
	0x64, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x6f,
	0x72, 0x4f, 0x66, 0x41, 0x6e, 0x64, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xeb, 0x02, 0x0a, 0x0f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3c, 0x0a, 0x17, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x16, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x3a, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x08, 0x5a, 0x06,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_elfinhost_proto_rawDescOnce sync.Once
	file_elfinhost_proto_rawDescData = file_elfinhost_proto_rawDesc
)

func file_elfinhost_proto_rawDescGZIP() []byte {
	file_elfinhost_proto_rawDescOnce.Do(func() {
		file_elfinhost_proto_rawDescData = protoimpl.X.CompressGZIP(file_elfinhost_proto_rawDescData)
	})
	return file_elfinhost_proto_rawDescData
}

var file_elfinhost_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_elfinhost_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_elfinhost_proto_goTypes = []interface{}{
	(Bulletin_BulletinType)(0),     // 0: proto.Bulletin.BulletinType
	(*StochasticPayment)(nil),      // 1: proto.StochasticPayment
	(*Bulletin)(nil),               // 2: proto.Bulletin
	(*AndOfConditions)(nil),        // 3: proto.AndOfConditions
	(*AuthChallenge)(nil),          // 4: proto.AuthChallenge
	(*DynamicSetChallenge)(nil),    // 5: proto.DynamicSetChallenge
	(*StaticSetChallenge)(nil),     // 6: proto.StaticSetChallenge
	(*StochasticPayCondition)(nil), // 7: proto.StochasticPayCondition
	(*AuthProof)(nil),              // 8: proto.AuthProof
	(*DynamicSetProof)(nil),        // 9: proto.DynamicSetProof
	(*StaticSetProof)(nil),         // 10: proto.StaticSetProof
}
var file_elfinhost_proto_depIdxs = []int32{
	0,  // 0: proto.Bulletin.type:type_name -> proto.Bulletin.BulletinType
	5,  // 1: proto.AuthChallenge.dynamic_set_challenge_list:type_name -> proto.DynamicSetChallenge
	6,  // 2: proto.AuthChallenge.static_set_challenge_list:type_name -> proto.StaticSetChallenge
	7,  // 3: proto.AuthChallenge.stochastic_pay_cond_list:type_name -> proto.StochasticPayCondition
	3,  // 4: proto.AuthChallenge.or_of_and_of_conditions:type_name -> proto.AndOfConditions
	9,  // 5: proto.AuthProof.dynamic_set_proof_list:type_name -> proto.DynamicSetProof
	10, // 6: proto.AuthProof.static_set_proof_list:type_name -> proto.StaticSetProof
	7,  // 7: proto.AuthProof.stochastic_pay_cond_list:type_name -> proto.StochasticPayCondition
	3,  // 8: proto.AuthProof.or_of_and_of_conditions:type_name -> proto.AndOfConditions
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_elfinhost_proto_init() }
func file_elfinhost_proto_init() {
	if File_elfinhost_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_elfinhost_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StochasticPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elfinhost_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bulletin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elfinhost_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndOfConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elfinhost_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elfinhost_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSetChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elfinhost_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticSetChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elfinhost_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StochasticPayCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elfinhost_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elfinhost_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicSetProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elfinhost_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticSetProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_elfinhost_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_elfinhost_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_elfinhost_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_elfinhost_proto_goTypes,
		DependencyIndexes: file_elfinhost_proto_depIdxs,
		EnumInfos:         file_elfinhost_proto_enumTypes,
		MessageInfos:      file_elfinhost_proto_msgTypes,
	}.Build()
	File_elfinhost_proto = out.File
	file_elfinhost_proto_rawDesc = nil
	file_elfinhost_proto_goTypes = nil
	file_elfinhost_proto_depIdxs = nil
}
