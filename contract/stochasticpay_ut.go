// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// StochasticPayVRFUTMetaData contains all meta data concerning the StochasticPayVRFUT contract.
var StochasticPayVRFUTMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"checkAndUpdateNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sep20Contract\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pkHashRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddrA_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"getEIP712Hash_ab\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt_pk0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pkTail\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddr_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_amount\",\"type\":\"uint256\"}],\"name\":\"getEIP712Hash_sr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pkHashRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddrA_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"getPayer_ab\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt_pk0_v\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pkTail\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddr_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"getPayer_sr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getVrfPubKeyByAddr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"keyBz\",\"type\":\"bytes\"}],\"name\":\"loadWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"pi\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pkX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pkY\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pkHashRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddrA_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB_v\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structStochasticPay_VRF.Params\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"payToAB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pi\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt_pk0_v\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pkTail\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddr_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structStochasticPay_VRF.Params_sr\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"payToSingleReciever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"vrfPubKey\",\"type\":\"bytes\"}],\"name\":\"registerVrfPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unregisterVrfPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sep20Contract_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b50613321806100206000396000f3fe6080604052600436106100dd5760003560e01c80638a694d401161007f578063bd6af86711610059578063bd6af867146102c1578063ceaa76c0146102ff578063d4fac45d1461033d578063da990a981461037a576100dd565b80638a694d4014610244578063913abde51461026d578063a055fe2714610284576100dd565b80634539b3d9116100bb5780634539b3d91461018557806347e7ef24146101c25780635aa8166c146101de5780636ada3cac14610207576100dd565b8063055c3d76146100e25780630aa0b5ab1461011f5780632e1a7d4d1461015c575b600080fd5b3480156100ee57600080fd5b50610109600480360381019061010491906118b2565b6103a3565b6040516101169190611946565b60405180910390f35b34801561012b57600080fd5b506101466004803603810190610141919061198d565b61050e565b6040516101539190611946565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190611a1a565b61067c565b005b34801561019157600080fd5b506101ac60048036038101906101a79190611a80565b61073a565b6040516101b99190611b8b565b60405180910390f35b6101dc60048036038101906101d79190611bd2565b6107ac565b005b3480156101ea57600080fd5b5061020560048036038101906102009190611d58565b610828565b005b34801561021357600080fd5b5061022e60048036038101906102299190611da1565b6108fc565b60405161023b9190611e4d565b60405180910390f35b34801561025057600080fd5b5061026b60048036038101906102669190611ef3565b610a20565b005b34801561027957600080fd5b50610282610cec565b005b34801561029057600080fd5b506102ab60048036038101906102a69190611f54565b610d87565b6040516102b89190611b8b565b60405180910390f35b3480156102cd57600080fd5b506102e860048036038101906102e39190611d58565b610e00565b6040516102f6929190612005565b60405180910390f35b34801561030b57600080fd5b506103266004803603810190610321919061202e565b610f0e565b60405161033492919061209c565b60405180910390f35b34801561034957600080fd5b50610364600480360381019061035f91906120c5565b610fa1565b6040516103719190612105565b60405180910390f35b34801561038657600080fd5b506103a1600480360381019061039c9190612196565b610fe4565b005b6000806040518060800160405280605f815260200161328d605f91396040516020016103cf9190612273565b604051602081830303815290604052805190602001206040516020016103f4906122d6565b6040516020818303038152906040528051906020012060405160200161041990612337565b604051602081830303815290604052805190602001206127103060405160200161044290612398565b6040516020818303038152906040528051906020012060405160200161046d969594939291906123ad565b60405160208183030381529060405280519060200120905080604051602001610495906124cc565b6040516020818303038152906040528051906020012088888888886040516020016104c5969594939291906124e1565b604051602081830303815290604052805190602001206040516020016104ec9291906125af565b6040516020818303038152906040528051906020012091505095945050505050565b6000806040518060800160405280605f815260200161328d605f913960405160200161053a9190612273565b6040516020818303038152906040528051906020012060405160200161055f906122d6565b6040516020818303038152906040528051906020012060405160200161058490612337565b60405160208183030381529060405280519060200120612710306040516020016105ad90612398565b604051602081830303815290604052805190602001206040516020016105d8969594939291906123ad565b60405160208183030381529060405280519060200120905080604051602001610600906126ca565b6040516020818303038152906040528051906020012089898989898960405160200161063297969594939291906126df565b604051602081830303815290604052805190602001206040516020016106599291906125af565b604051602081830303815290604052805190602001209150509695505050505050565b6000606082901c90506000826bffffffffffffffffffffffff169050600082336040516020016106ad92919061274e565b60405160208183030381529060405290506000806106ca83610e00565b9150915083811015610711576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610708906127d4565b60405180910390fd5b61071c853386611324565b6107328383868461072d9190612823565b611495565b505050505050565b60008061074b8b8b8b8b8b8b61050e565b9050600181868686604051600081526020016040526040516107709493929190612866565b6020604051602081039080840390855afa158015610792573d6000803e3d6000fd5b505050602060405103519150509998505050505050505050565b6000606082901c90506000826bffffffffffffffffffffffff1690506107d2828261152a565b50600082856040516020016107e892919061274e565b604051602081830303815290604052905060008061080583610e00565b9150915061081f8383868461081a91906128ab565b611495565b50505050505050565b602181511461086c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108639061292b565b60405180910390fd5b60003360405160200161087f9190612993565b6040516020818303038152906040529050600180826040516108a191906129ea565b908152602001604051809103902060010160006101000a81548160ff021916908315150217905550816001826040516108da91906129ea565b908152602001604051809103902060000190816108f79190612c0d565b505050565b60606000826040516020016109119190612993565b604051602081830303815290604052905060018160405161093291906129ea565b908152602001604051809103902060010160009054906101000a900460ff1661096d5760405180602001604052806000815250915050610a1b565b60018160405161097d91906129ea565b9081526020016040518091039020600001805461099990612a30565b80601f01602080910402602001604051908101604052809291908181526020018280546109c590612a30565b8015610a125780601f106109e757610100808354040283529160200191610a12565b820191906000526020600020905b8154815290600101906020018083116109f557829003601f168201915b50505050509150505b919050565b600060208260400135901c90508067ffffffffffffffff164210610a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7090612d2b565b60405180910390fd5b6000826040013563ffffffff16905060008060ff8560000135901c14610af9576000610aaf856000013586602001358989611795565b9050828110610af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aea90612d97565b60405180910390fd5b50610b54565b610b0e8460000135856020013588888661179f565b905060008103610b53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4a90612d97565b60405180910390fd5b5b6000610b81856000013586602001358760400135886060013589608001358a60a001358b60c00135610d87565b9050600060608660800135901c60601b60601c905060008183604051602001610bab92919061274e565b6040516020818303038152906040529050600080610bc883610e00565b915091506000610be5838b6060013560108d60000135901c610f0e565b809250819450505080610c2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2490612e03565b60405180910390fd5b600060608b60400135901c60601b60601c905060008b608001356bffffffffffffffffffffffff16905060008914610c7b576108008982610c6e9190612e23565b610c789190612eac565b90505b610c9186868387610c8c9190612823565b611495565b8682604051602001610ca492919061274e565b6040516020818303038152906040529550610cbe86610e00565b8095508196505050610cdc86868387610cd791906128ab565b611495565b5050505050505050505050505050565b600033604051602001610cff9190612993565b6040516020818303038152906040529050600181604051610d2091906129ea565b908152602001604051809103902060010160009054906101000a900460ff16610d495750610d85565b6000600182604051610d5b91906129ea565b908152602001604051809103902060010160006101000a81548160ff021916908315150217905550505b565b600080610d9b60088a901c898989896103a3565b9050600089905060018282878760405160008152602001604052604051610dc59493929190612866565b6020604051602081039080840390855afa158015610de7573d6000803e3d6000fd5b5050506020604051035192505050979650505050505050565b600080600083604051610e1391906129ea565b908152602001604051809103902060010160009054906101000a900460ff16610e425760008091509150610f09565b60008084604051610e5391906129ea565b90815260200160405180910390206000018054610e6f90612a30565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9b90612a30565b8015610ee85780601f10610ebd57610100808354040283529160200191610ee8565b820191906000526020600020905b815481529060010190602001808311610ecb57829003601f168201915b5050505050905080806020019051810190610f039190612ef2565b92509250505b915091565b60008060008060e0905060008060005b6003811015610f705760008489169050600889901c985060008163ffffffff901b9050808b16818d1603610f5157600194505b80871796508081828e1603168417935050508080600101915050610f1e565b5081610f86576000809550955050505050610f99565b8319891684821617600195509550505050505b935093915050565b6000808284604051602001610fb792919061274e565b6040516020818303038152906040529050600080610fd483610e00565b9150915080935050505092915050565b6000816080013590506000606082901c60601b60601c90506000602083901c90508067ffffffffffffffff164210611051576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104890612d2b565b60405180910390fd5b60006110728560000135600187604001351660021787602001358a8a6117aa565b905060008463ffffffff1690508082106110c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b890612d97565b60405180910390fd5b5050506000836020013584604001356040516020016110e1929190612f53565b60405160208183030381529060405280519060200120905061110988888660600135846117b5565b611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f90612fcb565b60405180910390fd5b600060088560e00135901c9050600061118a8660000135876060013588608001358960a001358a60c00135878c60e001358d61010001358e610120013561073a565b9050600084826040516020016111a192919061274e565b60405160208183030381529060405290506000806111be83610e00565b9150915060006111d7838b60a001358c60000135610f0e565b80925081945050508061121f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121690612e03565b60405180910390fd5b600060608b60c00135901c60601b60601c905060008860001c905060008c60c001356bffffffffffffffffffffffff16905061127287878b84896112639190612823565b61126d9190612823565b611495565b600081146112c6578a8360405160200161128d92919061274e565b60405160208183030381529060405296506112a787610e00565b80965081975050506112c5878783886112c091906128ab565b611495565b5b8a826040516020016112d992919061274e565b60405160208183030381529060405296506112f387610e00565b809650819750505061131187878b8861130c91906128ab565b611495565b5050505050505050505050505050505050565b6000810315611490576000808473ffffffffffffffffffffffffffffffffffffffff16848460405160240161135a929190612feb565b6040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516113e491906129ea565b6000604051808303816000865af19150503d8060008114611421576040519150601f19603f3d011682016040523d82523d6000602084013e611426565b606091505b50915091506000818060200190518101906114419190613040565b905082801561144d5750805b61148c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611483906130b9565b60405180910390fd5b5050505b505050565b600082826040516020016114aa929190612005565b604051602081830303815290604052905060016000856040516114cd91906129ea565b908152602001604051809103902060010160006101000a81548160ff0219169083151502179055508060008560405161150691906129ea565b908152602001604051809103902060000190816115239190612c0d565b5050505050565b60008082905061271173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115ac578234146115a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159e90613125565b60405180910390fd5b61178b565b600034146115ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e690613191565b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161162a9190611b8b565b602060405180830381865afa158015611647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166b91906131b1565b90508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016116aa939291906131de565b6020604051808303816000875af11580156116c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ed9190613040565b5060008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117299190611b8b565b602060405180830381865afa158015611746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176a91906131b1565b905081816117789190612823565b6bffffffffffffffffffffffff16925050505b8091505092915050565b6000949350505050565b600095945050505050565b600095945050505050565b6000826117c38686856117ce565b149050949350505050565b60008082905060005b8585905081101561181a57611805828787848181106117f9576117f8613215565b5b90506020020135611826565b9150808061181290613244565b9150506117d7565b50809150509392505050565b600081831061183e576118398284611851565b611849565b6118488383611851565b5b905092915050565b600082600052816020526040600020905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61188f8161187c565b811461189a57600080fd5b50565b6000813590506118ac81611886565b92915050565b600080600080600060a086880312156118ce576118cd611872565b5b60006118dc8882890161189d565b95505060206118ed8882890161189d565b94505060406118fe8882890161189d565b935050606061190f8882890161189d565b92505060806119208882890161189d565b9150509295509295909350565b6000819050919050565b6119408161192d565b82525050565b600060208201905061195b6000830184611937565b92915050565b61196a8161192d565b811461197557600080fd5b50565b60008135905061198781611961565b92915050565b60008060008060008060c087890312156119aa576119a9611872565b5b60006119b889828a0161189d565b96505060206119c989828a01611978565b95505060406119da89828a0161189d565b94505060606119eb89828a0161189d565b93505060806119fc89828a0161189d565b92505060a0611a0d89828a0161189d565b9150509295509295509295565b600060208284031215611a3057611a2f611872565b5b6000611a3e8482850161189d565b91505092915050565b600060ff82169050919050565b611a5d81611a47565b8114611a6857600080fd5b50565b600081359050611a7a81611a54565b92915050565b60008060008060008060008060006101208a8c031215611aa357611aa2611872565b5b6000611ab18c828d0161189d565b9950506020611ac28c828d01611978565b9850506040611ad38c828d0161189d565b9750506060611ae48c828d0161189d565b9650506080611af58c828d0161189d565b95505060a0611b068c828d0161189d565b94505060c0611b178c828d01611a6b565b93505060e0611b288c828d01611978565b925050610100611b3a8c828d01611978565b9150509295985092959850929598565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b7582611b4a565b9050919050565b611b8581611b6a565b82525050565b6000602082019050611ba06000830184611b7c565b92915050565b611baf81611b6a565b8114611bba57600080fd5b50565b600081359050611bcc81611ba6565b92915050565b60008060408385031215611be957611be8611872565b5b6000611bf785828601611bbd565b9250506020611c088582860161189d565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c6582611c1c565b810181811067ffffffffffffffff82111715611c8457611c83611c2d565b5b80604052505050565b6000611c97611868565b9050611ca38282611c5c565b919050565b600067ffffffffffffffff821115611cc357611cc2611c2d565b5b611ccc82611c1c565b9050602081019050919050565b82818337600083830152505050565b6000611cfb611cf684611ca8565b611c8d565b905082815260208101848484011115611d1757611d16611c17565b5b611d22848285611cd9565b509392505050565b600082601f830112611d3f57611d3e611c12565b5b8135611d4f848260208601611ce8565b91505092915050565b600060208284031215611d6e57611d6d611872565b5b600082013567ffffffffffffffff811115611d8c57611d8b611877565b5b611d9884828501611d2a565b91505092915050565b600060208284031215611db757611db6611872565b5b6000611dc584828501611bbd565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e08578082015181840152602081019050611ded565b60008484015250505050565b6000611e1f82611dce565b611e298185611dd9565b9350611e39818560208601611dea565b611e4281611c1c565b840191505092915050565b60006020820190508181036000830152611e678184611e14565b905092915050565b600080fd5b600080fd5b60008083601f840112611e8f57611e8e611c12565b5b8235905067ffffffffffffffff811115611eac57611eab611e6f565b5b602083019150836001820283011115611ec857611ec7611e74565b5b9250929050565b600080fd5b600060e08284031215611eea57611ee9611ecf565b5b81905092915050565b60008060006101008486031215611f0d57611f0c611872565b5b600084013567ffffffffffffffff811115611f2b57611f2a611877565b5b611f3786828701611e79565b93509350506020611f4a86828701611ed4565b9150509250925092565b600080600080600080600060e0888a031215611f7357611f72611872565b5b6000611f818a828b0161189d565b9750506020611f928a828b0161189d565b9650506040611fa38a828b0161189d565b9550506060611fb48a828b0161189d565b9450506080611fc58a828b0161189d565b93505060a0611fd68a828b01611978565b92505060c0611fe78a828b01611978565b91505092959891949750929550565b611fff8161187c565b82525050565b600060408201905061201a6000830185611ff6565b6120276020830184611ff6565b9392505050565b60008060006060848603121561204757612046611872565b5b60006120558682870161189d565b93505060206120668682870161189d565b92505060406120778682870161189d565b9150509250925092565b60008115159050919050565b61209681612081565b82525050565b60006040820190506120b16000830185611ff6565b6120be602083018461208d565b9392505050565b600080604083850312156120dc576120db611872565b5b60006120ea85828601611bbd565b92505060206120fb85828601611bbd565b9150509250929050565b600060208201905061211a6000830184611ff6565b92915050565b60008083601f84011261213657612135611c12565b5b8235905067ffffffffffffffff81111561215357612152611e6f565b5b60208301915083602082028301111561216f5761216e611e74565b5b9250929050565b6000610140828403121561218d5761218c611ecf565b5b81905092915050565b600080600080600061018086880312156121b3576121b2611872565b5b600086013567ffffffffffffffff8111156121d1576121d0611877565b5b6121dd88828901612120565b9550955050602086013567ffffffffffffffff811115612200576121ff611877565b5b61220c88828901611e79565b9350935050604061221f88828901612176565b9150509295509295909350565b600081519050919050565b600081905092915050565b600061224d8261222c565b6122578185612237565b9350612267818560208601611dea565b80840191505092915050565b600061227f8284612242565b915081905092915050565b7f73746f636861737469635f7061796d656e740000000000000000000000000000600082015250565b60006122c0601283612237565b91506122cb8261228a565b601282019050919050565b60006122e1826122b3565b9150819050919050565b7f76302e312e300000000000000000000000000000000000000000000000000000600082015250565b6000612321600683612237565b915061232c826122eb565b600682019050919050565b600061234282612314565b9150819050919050565b7f53746f636861737469635061795f565246000000000000000000000000000000600082015250565b6000612382601183612237565b915061238d8261234c565b601182019050919050565b60006123a382612375565b9150819050919050565b600060c0820190506123c26000830189611937565b6123cf6020830188611937565b6123dc6040830187611937565b6123e96060830186611ff6565b6123f66080830185611b7c565b61240360a0830184611937565b979650505050505050565b7f5061792875696e7432353620706179657253616c745f706b302c75696e74323560008201527f3620706b5461696c2c75696e74323536207061796565416464725f647565546960208201527f6d6536345f70726f6233322c75696e74323536207365656e4e6f6e6365732c7560408201527f696e74323536207365703230436f6e74726163745f616d6f756e742900000000606082015250565b60006124b6607c83612237565b91506124c18261240e565b607c82019050919050565b60006124d7826124a9565b9150819050919050565b600060c0820190506124f66000830189611937565b6125036020830188611ff6565b6125106040830187611ff6565b61251d6060830186611ff6565b61252a6080830185611ff6565b61253760a0830184611ff6565b979650505050505050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612578600283612237565b915061258382612542565b600282019050919050565b6000819050919050565b6125a96125a48261192d565b61258e565b82525050565b60006125ba8261256b565b91506125c68285612598565b6020820191506125d68284612598565b6020820191508190509392505050565b7f5061792875696e7432353620706179657253616c742c6279746573333220706b60008201527f48617368526f6f742c75696e74323536207365703230436f6e74726163745f6460208201527f756554696d6536345f70726f6233322c75696e74323536207365656e4e6f6e6360408201527f65732c75696e7432353620706179656541646472415f616d6f756e74412c756960608201527f6e7432353620616d6f756e744229000000000000000000000000000000000000608082015250565b60006126b4608e83612237565b91506126bf826125e6565b608e82019050919050565b60006126d5826126a7565b9150819050919050565b600060e0820190506126f4600083018a611937565b6127016020830189611ff6565b61270e6040830188611937565b61271b6060830187611ff6565b6127286080830186611ff6565b61273560a0830185611ff6565b61274260c0830184611ff6565b98975050505050505050565b60006040820190506127636000830185611b7c565b6127706020830184611b7c565b9392505050565b600082825260208201905092915050565b7f4e4f545f454e4f5547485f434f494e5300000000000000000000000000000000600082015250565b60006127be601083612777565b91506127c982612788565b602082019050919050565b600060208201905081810360008301526127ed816127b1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061282e8261187c565b91506128398361187c565b9250828203905081811115612851576128506127f4565b5b92915050565b61286081611a47565b82525050565b600060808201905061287b6000830187611937565b6128886020830186612857565b6128956040830185611937565b6128a26060830184611937565b95945050505050565b60006128b68261187c565b91506128c18361187c565b92508282019050808211156128d9576128d86127f4565b5b92915050565b7f494e434f52524543545f5652465f504b5f4c454e475448000000000000000000600082015250565b6000612915601783612777565b9150612920826128df565b602082019050919050565b6000602082019050818103600083015261294481612908565b9050919050565b60008160601b9050919050565b60006129638261294b565b9050919050565b600061297582612958565b9050919050565b61298d61298882611b6a565b61296a565b82525050565b600061299f828461297c565b60148201915081905092915050565b600081905092915050565b60006129c482611dce565b6129ce81856129ae565b93506129de818560208601611dea565b80840191505092915050565b60006129f682846129b9565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612a4857607f821691505b602082108103612a5b57612a5a612a01565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612ac37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a86565b612acd8683612a86565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612b0a612b05612b008461187c565b612ae5565b61187c565b9050919050565b6000819050919050565b612b2483612aef565b612b38612b3082612b11565b848454612a93565b825550505050565b600090565b612b4d612b40565b612b58818484612b1b565b505050565b5b81811015612b7c57612b71600082612b45565b600181019050612b5e565b5050565b601f821115612bc157612b9281612a61565b612b9b84612a76565b81016020851015612baa578190505b612bbe612bb685612a76565b830182612b5d565b50505b505050565b600082821c905092915050565b6000612be460001984600802612bc6565b1980831691505092915050565b6000612bfd8383612bd3565b9150826002028217905092915050565b612c1682611dce565b67ffffffffffffffff811115612c2f57612c2e611c2d565b5b612c398254612a30565b612c44828285612b80565b600060209050601f831160018114612c775760008415612c65578287015190505b612c6f8582612bf1565b865550612cd7565b601f198416612c8586612a61565b60005b82811015612cad57848901518255600182019150602085019450602081019050612c88565b86831015612cca5784890151612cc6601f891682612bd3565b8355505b6001600288020188555050505b505050505050565b7f4558504952454400000000000000000000000000000000000000000000000000600082015250565b6000612d15600783612777565b9150612d2082612cdf565b602082019050919050565b60006020820190508181036000830152612d4481612d08565b9050919050565b7f43414e4e4f545f50415900000000000000000000000000000000000000000000600082015250565b6000612d81600a83612777565b9150612d8c82612d4b565b602082019050919050565b60006020820190508181036000830152612db081612d74565b9050919050565b7f494e434f52524543545f4e4f4e43455300000000000000000000000000000000600082015250565b6000612ded601083612777565b9150612df882612db7565b602082019050919050565b60006020820190508181036000830152612e1c81612de0565b9050919050565b6000612e2e8261187c565b9150612e398361187c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612e7257612e716127f4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612eb78261187c565b9150612ec28361187c565b925082612ed257612ed1612e7d565b5b828204905092915050565b600081519050612eec81611886565b92915050565b60008060408385031215612f0957612f08611872565b5b6000612f1785828601612edd565b9250506020612f2885828601612edd565b9150509250929050565b6000819050919050565b612f4d612f488261187c565b612f32565b82525050565b6000612f5f8285612f3c565b602082019150612f6f8284612f3c565b6020820191508190509392505050565b7f5645524946595f4641494c454400000000000000000000000000000000000000600082015250565b6000612fb5600d83612777565b9150612fc082612f7f565b602082019050919050565b60006020820190508181036000830152612fe481612fa8565b9050919050565b60006040820190506130006000830185611b7c565b61300d6020830184611ff6565b9392505050565b61301d81612081565b811461302857600080fd5b50565b60008151905061303a81613014565b92915050565b60006020828403121561305657613055611872565b5b60006130648482850161302b565b91505092915050565b7f7472616e732d6661696c00000000000000000000000000000000000000000000600082015250565b60006130a3600a83612777565b91506130ae8261306d565b602082019050919050565b600060208201905081810360008301526130d281613096565b9050919050565b7f76616c75652d6d69736d61746368000000000000000000000000000000000000600082015250565b600061310f600e83612777565b915061311a826130d9565b602082019050919050565b6000602082019050818103600083015261313e81613102565b9050919050565b7f646f6e742d73656e642d62636800000000000000000000000000000000000000600082015250565b600061317b600d83612777565b915061318682613145565b602082019050919050565b600060208201905081810360008301526131aa8161316e565b9050919050565b6000602082840312156131c7576131c6611872565b5b60006131d584828501612edd565b91505092915050565b60006060820190506131f36000830186611b7c565b6132006020830185611b7c565b61320d6040830184611ff6565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061324f8261187c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613281576132806127f4565b5b60018201905091905056fe454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429a2646970667358221220f15a1f72a68942be63403a5c87d3599dc2388821c1302f21c860c5192071717364736f6c63430008100033",
}

// StochasticPayVRFUTABI is the input ABI used to generate the binding from.
// Deprecated: Use StochasticPayVRFUTMetaData.ABI instead.
var StochasticPayVRFUTABI = StochasticPayVRFUTMetaData.ABI

// StochasticPayVRFUTBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use StochasticPayVRFUTMetaData.Bin instead.
var StochasticPayVRFUTBin = StochasticPayVRFUTMetaData.Bin

// DeployStochasticPayVRFUT deploys a new Ethereum contract, binding an instance of StochasticPayVRFUT to it.
func DeployStochasticPayVRFUT(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *StochasticPayVRFUT, error) {
	parsed, err := StochasticPayVRFUTMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(StochasticPayVRFUTBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &StochasticPayVRFUT{StochasticPayVRFUTCaller: StochasticPayVRFUTCaller{contract: contract}, StochasticPayVRFUTTransactor: StochasticPayVRFUTTransactor{contract: contract}, StochasticPayVRFUTFilterer: StochasticPayVRFUTFilterer{contract: contract}}, nil
}

// StochasticPayVRFUT is an auto generated Go binding around an Ethereum contract.
type StochasticPayVRFUT struct {
	StochasticPayVRFUTCaller     // Read-only binding to the contract
	StochasticPayVRFUTTransactor // Write-only binding to the contract
	StochasticPayVRFUTFilterer   // Log filterer for contract events
}

// StochasticPayVRFUTCaller is an auto generated read-only Go binding around an Ethereum contract.
type StochasticPayVRFUTCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StochasticPayVRFUTTransactor is an auto generated write-only Go binding around an Ethereum contract.
type StochasticPayVRFUTTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StochasticPayVRFUTFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type StochasticPayVRFUTFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StochasticPayVRFUTSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type StochasticPayVRFUTSession struct {
	Contract     *StochasticPayVRFUT // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// StochasticPayVRFUTCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type StochasticPayVRFUTCallerSession struct {
	Contract *StochasticPayVRFUTCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// StochasticPayVRFUTTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type StochasticPayVRFUTTransactorSession struct {
	Contract     *StochasticPayVRFUTTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// StochasticPayVRFUTRaw is an auto generated low-level Go binding around an Ethereum contract.
type StochasticPayVRFUTRaw struct {
	Contract *StochasticPayVRFUT // Generic contract binding to access the raw methods on
}

// StochasticPayVRFUTCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type StochasticPayVRFUTCallerRaw struct {
	Contract *StochasticPayVRFUTCaller // Generic read-only contract binding to access the raw methods on
}

// StochasticPayVRFUTTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type StochasticPayVRFUTTransactorRaw struct {
	Contract *StochasticPayVRFUTTransactor // Generic write-only contract binding to access the raw methods on
}

// NewStochasticPayVRFUT creates a new instance of StochasticPayVRFUT, bound to a specific deployed contract.
func NewStochasticPayVRFUT(address common.Address, backend bind.ContractBackend) (*StochasticPayVRFUT, error) {
	contract, err := bindStochasticPayVRFUT(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &StochasticPayVRFUT{StochasticPayVRFUTCaller: StochasticPayVRFUTCaller{contract: contract}, StochasticPayVRFUTTransactor: StochasticPayVRFUTTransactor{contract: contract}, StochasticPayVRFUTFilterer: StochasticPayVRFUTFilterer{contract: contract}}, nil
}

// NewStochasticPayVRFUTCaller creates a new read-only instance of StochasticPayVRFUT, bound to a specific deployed contract.
func NewStochasticPayVRFUTCaller(address common.Address, caller bind.ContractCaller) (*StochasticPayVRFUTCaller, error) {
	contract, err := bindStochasticPayVRFUT(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &StochasticPayVRFUTCaller{contract: contract}, nil
}

// NewStochasticPayVRFUTTransactor creates a new write-only instance of StochasticPayVRFUT, bound to a specific deployed contract.
func NewStochasticPayVRFUTTransactor(address common.Address, transactor bind.ContractTransactor) (*StochasticPayVRFUTTransactor, error) {
	contract, err := bindStochasticPayVRFUT(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &StochasticPayVRFUTTransactor{contract: contract}, nil
}

// NewStochasticPayVRFUTFilterer creates a new log filterer instance of StochasticPayVRFUT, bound to a specific deployed contract.
func NewStochasticPayVRFUTFilterer(address common.Address, filterer bind.ContractFilterer) (*StochasticPayVRFUTFilterer, error) {
	contract, err := bindStochasticPayVRFUT(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &StochasticPayVRFUTFilterer{contract: contract}, nil
}

// bindStochasticPayVRFUT binds a generic wrapper to an already deployed contract.
func bindStochasticPayVRFUT(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(StochasticPayVRFUTABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_StochasticPayVRFUT *StochasticPayVRFUTRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _StochasticPayVRFUT.Contract.StochasticPayVRFUTCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_StochasticPayVRFUT *StochasticPayVRFUTRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.StochasticPayVRFUTTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_StochasticPayVRFUT *StochasticPayVRFUTRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.StochasticPayVRFUTTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_StochasticPayVRFUT *StochasticPayVRFUTCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _StochasticPayVRFUT.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.contract.Transact(opts, method, params...)
}

// CheckAndUpdateNonces is a free data retrieval call binding the contract method 0xceaa76c0.
//
// Solidity: function checkAndUpdateNonces(uint256 currNonces, uint256 seenNonces, uint256 salt) pure returns(uint256, bool)
func (_StochasticPayVRFUT *StochasticPayVRFUTCaller) CheckAndUpdateNonces(opts *bind.CallOpts, currNonces *big.Int, seenNonces *big.Int, salt *big.Int) (*big.Int, bool, error) {
	var out []interface{}
	err := _StochasticPayVRFUT.contract.Call(opts, &out, "checkAndUpdateNonces", currNonces, seenNonces, salt)

	if err != nil {
		return *new(*big.Int), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)

	return out0, out1, err

}

// CheckAndUpdateNonces is a free data retrieval call binding the contract method 0xceaa76c0.
//
// Solidity: function checkAndUpdateNonces(uint256 currNonces, uint256 seenNonces, uint256 salt) pure returns(uint256, bool)
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) CheckAndUpdateNonces(currNonces *big.Int, seenNonces *big.Int, salt *big.Int) (*big.Int, bool, error) {
	return _StochasticPayVRFUT.Contract.CheckAndUpdateNonces(&_StochasticPayVRFUT.CallOpts, currNonces, seenNonces, salt)
}

// CheckAndUpdateNonces is a free data retrieval call binding the contract method 0xceaa76c0.
//
// Solidity: function checkAndUpdateNonces(uint256 currNonces, uint256 seenNonces, uint256 salt) pure returns(uint256, bool)
func (_StochasticPayVRFUT *StochasticPayVRFUTCallerSession) CheckAndUpdateNonces(currNonces *big.Int, seenNonces *big.Int, salt *big.Int) (*big.Int, bool, error) {
	return _StochasticPayVRFUT.Contract.CheckAndUpdateNonces(&_StochasticPayVRFUT.CallOpts, currNonces, seenNonces, salt)
}

// GetBalance is a free data retrieval call binding the contract method 0xd4fac45d.
//
// Solidity: function getBalance(address owner, address sep20Contract) view returns(uint256)
func (_StochasticPayVRFUT *StochasticPayVRFUTCaller) GetBalance(opts *bind.CallOpts, owner common.Address, sep20Contract common.Address) (*big.Int, error) {
	var out []interface{}
	err := _StochasticPayVRFUT.contract.Call(opts, &out, "getBalance", owner, sep20Contract)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetBalance is a free data retrieval call binding the contract method 0xd4fac45d.
//
// Solidity: function getBalance(address owner, address sep20Contract) view returns(uint256)
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) GetBalance(owner common.Address, sep20Contract common.Address) (*big.Int, error) {
	return _StochasticPayVRFUT.Contract.GetBalance(&_StochasticPayVRFUT.CallOpts, owner, sep20Contract)
}

// GetBalance is a free data retrieval call binding the contract method 0xd4fac45d.
//
// Solidity: function getBalance(address owner, address sep20Contract) view returns(uint256)
func (_StochasticPayVRFUT *StochasticPayVRFUTCallerSession) GetBalance(owner common.Address, sep20Contract common.Address) (*big.Int, error) {
	return _StochasticPayVRFUT.Contract.GetBalance(&_StochasticPayVRFUT.CallOpts, owner, sep20Contract)
}

// GetEIP712HashAb is a free data retrieval call binding the contract method 0x0aa0b5ab.
//
// Solidity: function getEIP712Hash_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB) view returns(bytes32)
func (_StochasticPayVRFUT *StochasticPayVRFUTCaller) GetEIP712HashAb(opts *bind.CallOpts, payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int) ([32]byte, error) {
	var out []interface{}
	err := _StochasticPayVRFUT.contract.Call(opts, &out, "getEIP712Hash_ab", payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetEIP712HashAb is a free data retrieval call binding the contract method 0x0aa0b5ab.
//
// Solidity: function getEIP712Hash_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB) view returns(bytes32)
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) GetEIP712HashAb(payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int) ([32]byte, error) {
	return _StochasticPayVRFUT.Contract.GetEIP712HashAb(&_StochasticPayVRFUT.CallOpts, payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB)
}

// GetEIP712HashAb is a free data retrieval call binding the contract method 0x0aa0b5ab.
//
// Solidity: function getEIP712Hash_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB) view returns(bytes32)
func (_StochasticPayVRFUT *StochasticPayVRFUTCallerSession) GetEIP712HashAb(payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int) ([32]byte, error) {
	return _StochasticPayVRFUT.Contract.GetEIP712HashAb(&_StochasticPayVRFUT.CallOpts, payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB)
}

// GetEIP712HashSr is a free data retrieval call binding the contract method 0x055c3d76.
//
// Solidity: function getEIP712Hash_sr(uint256 payerSalt_pk0, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount) view returns(bytes32)
func (_StochasticPayVRFUT *StochasticPayVRFUTCaller) GetEIP712HashSr(opts *bind.CallOpts, payerSalt_pk0 *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int) ([32]byte, error) {
	var out []interface{}
	err := _StochasticPayVRFUT.contract.Call(opts, &out, "getEIP712Hash_sr", payerSalt_pk0, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetEIP712HashSr is a free data retrieval call binding the contract method 0x055c3d76.
//
// Solidity: function getEIP712Hash_sr(uint256 payerSalt_pk0, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount) view returns(bytes32)
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) GetEIP712HashSr(payerSalt_pk0 *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int) ([32]byte, error) {
	return _StochasticPayVRFUT.Contract.GetEIP712HashSr(&_StochasticPayVRFUT.CallOpts, payerSalt_pk0, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount)
}

// GetEIP712HashSr is a free data retrieval call binding the contract method 0x055c3d76.
//
// Solidity: function getEIP712Hash_sr(uint256 payerSalt_pk0, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount) view returns(bytes32)
func (_StochasticPayVRFUT *StochasticPayVRFUTCallerSession) GetEIP712HashSr(payerSalt_pk0 *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int) ([32]byte, error) {
	return _StochasticPayVRFUT.Contract.GetEIP712HashSr(&_StochasticPayVRFUT.CallOpts, payerSalt_pk0, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount)
}

// GetPayerAb is a free data retrieval call binding the contract method 0x4539b3d9.
//
// Solidity: function getPayer_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB, uint8 v, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRFUT *StochasticPayVRFUTCaller) GetPayerAb(opts *bind.CallOpts, payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	var out []interface{}
	err := _StochasticPayVRFUT.contract.Call(opts, &out, "getPayer_ab", payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB, v, r, s)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPayerAb is a free data retrieval call binding the contract method 0x4539b3d9.
//
// Solidity: function getPayer_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB, uint8 v, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) GetPayerAb(payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	return _StochasticPayVRFUT.Contract.GetPayerAb(&_StochasticPayVRFUT.CallOpts, payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB, v, r, s)
}

// GetPayerAb is a free data retrieval call binding the contract method 0x4539b3d9.
//
// Solidity: function getPayer_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB, uint8 v, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRFUT *StochasticPayVRFUTCallerSession) GetPayerAb(payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	return _StochasticPayVRFUT.Contract.GetPayerAb(&_StochasticPayVRFUT.CallOpts, payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB, v, r, s)
}

// GetPayerSr is a free data retrieval call binding the contract method 0xa055fe27.
//
// Solidity: function getPayer_sr(uint256 payerSalt_pk0_v, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRFUT *StochasticPayVRFUTCaller) GetPayerSr(opts *bind.CallOpts, payerSalt_pk0_v *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int, r [32]byte, s [32]byte) (common.Address, error) {
	var out []interface{}
	err := _StochasticPayVRFUT.contract.Call(opts, &out, "getPayer_sr", payerSalt_pk0_v, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount, r, s)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPayerSr is a free data retrieval call binding the contract method 0xa055fe27.
//
// Solidity: function getPayer_sr(uint256 payerSalt_pk0_v, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) GetPayerSr(payerSalt_pk0_v *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int, r [32]byte, s [32]byte) (common.Address, error) {
	return _StochasticPayVRFUT.Contract.GetPayerSr(&_StochasticPayVRFUT.CallOpts, payerSalt_pk0_v, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount, r, s)
}

// GetPayerSr is a free data retrieval call binding the contract method 0xa055fe27.
//
// Solidity: function getPayer_sr(uint256 payerSalt_pk0_v, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRFUT *StochasticPayVRFUTCallerSession) GetPayerSr(payerSalt_pk0_v *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int, r [32]byte, s [32]byte) (common.Address, error) {
	return _StochasticPayVRFUT.Contract.GetPayerSr(&_StochasticPayVRFUT.CallOpts, payerSalt_pk0_v, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount, r, s)
}

// GetVrfPubKeyByAddr is a free data retrieval call binding the contract method 0x6ada3cac.
//
// Solidity: function getVrfPubKeyByAddr(address addr) view returns(bytes)
func (_StochasticPayVRFUT *StochasticPayVRFUTCaller) GetVrfPubKeyByAddr(opts *bind.CallOpts, addr common.Address) ([]byte, error) {
	var out []interface{}
	err := _StochasticPayVRFUT.contract.Call(opts, &out, "getVrfPubKeyByAddr", addr)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// GetVrfPubKeyByAddr is a free data retrieval call binding the contract method 0x6ada3cac.
//
// Solidity: function getVrfPubKeyByAddr(address addr) view returns(bytes)
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) GetVrfPubKeyByAddr(addr common.Address) ([]byte, error) {
	return _StochasticPayVRFUT.Contract.GetVrfPubKeyByAddr(&_StochasticPayVRFUT.CallOpts, addr)
}

// GetVrfPubKeyByAddr is a free data retrieval call binding the contract method 0x6ada3cac.
//
// Solidity: function getVrfPubKeyByAddr(address addr) view returns(bytes)
func (_StochasticPayVRFUT *StochasticPayVRFUTCallerSession) GetVrfPubKeyByAddr(addr common.Address) ([]byte, error) {
	return _StochasticPayVRFUT.Contract.GetVrfPubKeyByAddr(&_StochasticPayVRFUT.CallOpts, addr)
}

// LoadWallet is a free data retrieval call binding the contract method 0xbd6af867.
//
// Solidity: function loadWallet(bytes keyBz) view returns(uint256 nonces, uint256 balance)
func (_StochasticPayVRFUT *StochasticPayVRFUTCaller) LoadWallet(opts *bind.CallOpts, keyBz []byte) (struct {
	Nonces  *big.Int
	Balance *big.Int
}, error) {
	var out []interface{}
	err := _StochasticPayVRFUT.contract.Call(opts, &out, "loadWallet", keyBz)

	outstruct := new(struct {
		Nonces  *big.Int
		Balance *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Nonces = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Balance = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// LoadWallet is a free data retrieval call binding the contract method 0xbd6af867.
//
// Solidity: function loadWallet(bytes keyBz) view returns(uint256 nonces, uint256 balance)
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) LoadWallet(keyBz []byte) (struct {
	Nonces  *big.Int
	Balance *big.Int
}, error) {
	return _StochasticPayVRFUT.Contract.LoadWallet(&_StochasticPayVRFUT.CallOpts, keyBz)
}

// LoadWallet is a free data retrieval call binding the contract method 0xbd6af867.
//
// Solidity: function loadWallet(bytes keyBz) view returns(uint256 nonces, uint256 balance)
func (_StochasticPayVRFUT *StochasticPayVRFUTCallerSession) LoadWallet(keyBz []byte) (struct {
	Nonces  *big.Int
	Balance *big.Int
}, error) {
	return _StochasticPayVRFUT.Contract.LoadWallet(&_StochasticPayVRFUT.CallOpts, keyBz)
}

// Deposit is a paid mutator transaction binding the contract method 0x47e7ef24.
//
// Solidity: function deposit(address owner, uint256 sep20Contract_amount) payable returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactor) Deposit(opts *bind.TransactOpts, owner common.Address, sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRFUT.contract.Transact(opts, "deposit", owner, sep20Contract_amount)
}

// Deposit is a paid mutator transaction binding the contract method 0x47e7ef24.
//
// Solidity: function deposit(address owner, uint256 sep20Contract_amount) payable returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) Deposit(owner common.Address, sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.Deposit(&_StochasticPayVRFUT.TransactOpts, owner, sep20Contract_amount)
}

// Deposit is a paid mutator transaction binding the contract method 0x47e7ef24.
//
// Solidity: function deposit(address owner, uint256 sep20Contract_amount) payable returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactorSession) Deposit(owner common.Address, sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.Deposit(&_StochasticPayVRFUT.TransactOpts, owner, sep20Contract_amount)
}

// PayToAB is a paid mutator transaction binding the contract method 0xda990a98.
//
// Solidity: function payToAB(bytes32[] proof, bytes pi, (uint256,uint256,uint256,bytes32,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactor) PayToAB(opts *bind.TransactOpts, proof [][32]byte, pi []byte, params StochasticPayVRFParams) (*types.Transaction, error) {
	return _StochasticPayVRFUT.contract.Transact(opts, "payToAB", proof, pi, params)
}

// PayToAB is a paid mutator transaction binding the contract method 0xda990a98.
//
// Solidity: function payToAB(bytes32[] proof, bytes pi, (uint256,uint256,uint256,bytes32,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) PayToAB(proof [][32]byte, pi []byte, params StochasticPayVRFParams) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.PayToAB(&_StochasticPayVRFUT.TransactOpts, proof, pi, params)
}

// PayToAB is a paid mutator transaction binding the contract method 0xda990a98.
//
// Solidity: function payToAB(bytes32[] proof, bytes pi, (uint256,uint256,uint256,bytes32,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactorSession) PayToAB(proof [][32]byte, pi []byte, params StochasticPayVRFParams) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.PayToAB(&_StochasticPayVRFUT.TransactOpts, proof, pi, params)
}

// PayToSingleReciever is a paid mutator transaction binding the contract method 0x8a694d40.
//
// Solidity: function payToSingleReciever(bytes pi, (uint256,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactor) PayToSingleReciever(opts *bind.TransactOpts, pi []byte, params StochasticPayVRFParamsSr) (*types.Transaction, error) {
	return _StochasticPayVRFUT.contract.Transact(opts, "payToSingleReciever", pi, params)
}

// PayToSingleReciever is a paid mutator transaction binding the contract method 0x8a694d40.
//
// Solidity: function payToSingleReciever(bytes pi, (uint256,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) PayToSingleReciever(pi []byte, params StochasticPayVRFParamsSr) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.PayToSingleReciever(&_StochasticPayVRFUT.TransactOpts, pi, params)
}

// PayToSingleReciever is a paid mutator transaction binding the contract method 0x8a694d40.
//
// Solidity: function payToSingleReciever(bytes pi, (uint256,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactorSession) PayToSingleReciever(pi []byte, params StochasticPayVRFParamsSr) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.PayToSingleReciever(&_StochasticPayVRFUT.TransactOpts, pi, params)
}

// RegisterVrfPubKey is a paid mutator transaction binding the contract method 0x5aa8166c.
//
// Solidity: function registerVrfPubKey(bytes vrfPubKey) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactor) RegisterVrfPubKey(opts *bind.TransactOpts, vrfPubKey []byte) (*types.Transaction, error) {
	return _StochasticPayVRFUT.contract.Transact(opts, "registerVrfPubKey", vrfPubKey)
}

// RegisterVrfPubKey is a paid mutator transaction binding the contract method 0x5aa8166c.
//
// Solidity: function registerVrfPubKey(bytes vrfPubKey) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) RegisterVrfPubKey(vrfPubKey []byte) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.RegisterVrfPubKey(&_StochasticPayVRFUT.TransactOpts, vrfPubKey)
}

// RegisterVrfPubKey is a paid mutator transaction binding the contract method 0x5aa8166c.
//
// Solidity: function registerVrfPubKey(bytes vrfPubKey) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactorSession) RegisterVrfPubKey(vrfPubKey []byte) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.RegisterVrfPubKey(&_StochasticPayVRFUT.TransactOpts, vrfPubKey)
}

// UnregisterVrfPubKey is a paid mutator transaction binding the contract method 0x913abde5.
//
// Solidity: function unregisterVrfPubKey() returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactor) UnregisterVrfPubKey(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _StochasticPayVRFUT.contract.Transact(opts, "unregisterVrfPubKey")
}

// UnregisterVrfPubKey is a paid mutator transaction binding the contract method 0x913abde5.
//
// Solidity: function unregisterVrfPubKey() returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) UnregisterVrfPubKey() (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.UnregisterVrfPubKey(&_StochasticPayVRFUT.TransactOpts)
}

// UnregisterVrfPubKey is a paid mutator transaction binding the contract method 0x913abde5.
//
// Solidity: function unregisterVrfPubKey() returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactorSession) UnregisterVrfPubKey() (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.UnregisterVrfPubKey(&_StochasticPayVRFUT.TransactOpts)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 sep20Contract_amount) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactor) Withdraw(opts *bind.TransactOpts, sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRFUT.contract.Transact(opts, "withdraw", sep20Contract_amount)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 sep20Contract_amount) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTSession) Withdraw(sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.Withdraw(&_StochasticPayVRFUT.TransactOpts, sep20Contract_amount)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 sep20Contract_amount) returns()
func (_StochasticPayVRFUT *StochasticPayVRFUTTransactorSession) Withdraw(sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRFUT.Contract.Withdraw(&_StochasticPayVRFUT.TransactOpts, sep20Contract_amount)
}
