// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// StochasticPayVRFParams is an auto generated low-level Go binding around an user-defined struct.
type StochasticPayVRFParams struct {
	PayerSalt                    *big.Int
	PkX                          *big.Int
	PkY                          *big.Int
	PkHashRoot                   [32]byte
	Sep20ContractDueTime64Prob32 *big.Int
	SeenNonces                   *big.Int
	PayeeAddrAAmountA            *big.Int
	AmountBV                     *big.Int
	R                            [32]byte
	S                            [32]byte
}

// StochasticPayVRFParamsSr is an auto generated low-level Go binding around an user-defined struct.
type StochasticPayVRFParamsSr struct {
	PayerSaltPk0V            *big.Int
	PkTail                   *big.Int
	PayeeAddrDueTime64Prob32 *big.Int
	SeenNonces               *big.Int
	Sep20ContractAmount      *big.Int
	R                        [32]byte
	S                        [32]byte
}

// StochasticPayVRFMetaData contains all meta data concerning the StochasticPayVRF contract.
var StochasticPayVRFMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"checkAndUpdateNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pkHashRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddrA_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"getEIP712Hash_ab\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt_pk0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pkTail\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddr_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_amount\",\"type\":\"uint256\"}],\"name\":\"getEIP712Hash_sr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pkHashRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddrA_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"getPayer_ab\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt_pk0_v\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pkTail\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddr_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"getPayer_sr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getVrfPubKeyByAddr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"keyBz\",\"type\":\"bytes\"}],\"name\":\"loadWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"pi\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pkX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pkY\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pkHashRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddrA_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB_v\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structStochasticPay_VRF.Params\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"payToAB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pi\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"payerSalt_pk0_v\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pkTail\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeAddr_dueTime64_prob32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seenNonces\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sep20Contract_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structStochasticPay_VRF.Params_sr\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"payToSingleReciever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"vrfPubKey\",\"type\":\"bytes\"}],\"name\":\"registerVrfPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unregisterVrfPubKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sep20Contract_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "",
}

// StochasticPayVRFABI is the input ABI used to generate the binding from.
// Deprecated: Use StochasticPayVRFMetaData.ABI instead.
var StochasticPayVRFABI = StochasticPayVRFMetaData.ABI

// StochasticPayVRFBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use StochasticPayVRFMetaData.Bin instead.
var StochasticPayVRFBin = StochasticPayVRFMetaData.Bin

// DeployStochasticPayVRF deploys a new Ethereum contract, binding an instance of StochasticPayVRF to it.
func DeployStochasticPayVRF(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *StochasticPayVRF, error) {
	parsed, err := StochasticPayVRFMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(StochasticPayVRFBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &StochasticPayVRF{StochasticPayVRFCaller: StochasticPayVRFCaller{contract: contract}, StochasticPayVRFTransactor: StochasticPayVRFTransactor{contract: contract}, StochasticPayVRFFilterer: StochasticPayVRFFilterer{contract: contract}}, nil
}

// StochasticPayVRF is an auto generated Go binding around an Ethereum contract.
type StochasticPayVRF struct {
	StochasticPayVRFCaller     // Read-only binding to the contract
	StochasticPayVRFTransactor // Write-only binding to the contract
	StochasticPayVRFFilterer   // Log filterer for contract events
}

// StochasticPayVRFCaller is an auto generated read-only Go binding around an Ethereum contract.
type StochasticPayVRFCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StochasticPayVRFTransactor is an auto generated write-only Go binding around an Ethereum contract.
type StochasticPayVRFTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StochasticPayVRFFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type StochasticPayVRFFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// StochasticPayVRFSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type StochasticPayVRFSession struct {
	Contract     *StochasticPayVRF // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// StochasticPayVRFCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type StochasticPayVRFCallerSession struct {
	Contract *StochasticPayVRFCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// StochasticPayVRFTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type StochasticPayVRFTransactorSession struct {
	Contract     *StochasticPayVRFTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// StochasticPayVRFRaw is an auto generated low-level Go binding around an Ethereum contract.
type StochasticPayVRFRaw struct {
	Contract *StochasticPayVRF // Generic contract binding to access the raw methods on
}

// StochasticPayVRFCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type StochasticPayVRFCallerRaw struct {
	Contract *StochasticPayVRFCaller // Generic read-only contract binding to access the raw methods on
}

// StochasticPayVRFTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type StochasticPayVRFTransactorRaw struct {
	Contract *StochasticPayVRFTransactor // Generic write-only contract binding to access the raw methods on
}

// NewStochasticPayVRF creates a new instance of StochasticPayVRF, bound to a specific deployed contract.
func NewStochasticPayVRF(address common.Address, backend bind.ContractBackend) (*StochasticPayVRF, error) {
	contract, err := bindStochasticPayVRF(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &StochasticPayVRF{StochasticPayVRFCaller: StochasticPayVRFCaller{contract: contract}, StochasticPayVRFTransactor: StochasticPayVRFTransactor{contract: contract}, StochasticPayVRFFilterer: StochasticPayVRFFilterer{contract: contract}}, nil
}

// NewStochasticPayVRFCaller creates a new read-only instance of StochasticPayVRF, bound to a specific deployed contract.
func NewStochasticPayVRFCaller(address common.Address, caller bind.ContractCaller) (*StochasticPayVRFCaller, error) {
	contract, err := bindStochasticPayVRF(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &StochasticPayVRFCaller{contract: contract}, nil
}

// NewStochasticPayVRFTransactor creates a new write-only instance of StochasticPayVRF, bound to a specific deployed contract.
func NewStochasticPayVRFTransactor(address common.Address, transactor bind.ContractTransactor) (*StochasticPayVRFTransactor, error) {
	contract, err := bindStochasticPayVRF(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &StochasticPayVRFTransactor{contract: contract}, nil
}

// NewStochasticPayVRFFilterer creates a new log filterer instance of StochasticPayVRF, bound to a specific deployed contract.
func NewStochasticPayVRFFilterer(address common.Address, filterer bind.ContractFilterer) (*StochasticPayVRFFilterer, error) {
	contract, err := bindStochasticPayVRF(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &StochasticPayVRFFilterer{contract: contract}, nil
}

// bindStochasticPayVRF binds a generic wrapper to an already deployed contract.
func bindStochasticPayVRF(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(StochasticPayVRFABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_StochasticPayVRF *StochasticPayVRFRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _StochasticPayVRF.Contract.StochasticPayVRFCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_StochasticPayVRF *StochasticPayVRFRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.StochasticPayVRFTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_StochasticPayVRF *StochasticPayVRFRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.StochasticPayVRFTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_StochasticPayVRF *StochasticPayVRFCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _StochasticPayVRF.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_StochasticPayVRF *StochasticPayVRFTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_StochasticPayVRF *StochasticPayVRFTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.contract.Transact(opts, method, params...)
}

// CheckAndUpdateNonces is a free data retrieval call binding the contract method 0xceaa76c0.
//
// Solidity: function checkAndUpdateNonces(uint256 currNonces, uint256 seenNonces, uint256 salt) pure returns(uint256, bool)
func (_StochasticPayVRF *StochasticPayVRFCaller) CheckAndUpdateNonces(opts *bind.CallOpts, currNonces *big.Int, seenNonces *big.Int, salt *big.Int) (*big.Int, bool, error) {
	var out []interface{}
	err := _StochasticPayVRF.contract.Call(opts, &out, "checkAndUpdateNonces", currNonces, seenNonces, salt)

	if err != nil {
		return *new(*big.Int), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)

	return out0, out1, err

}

// CheckAndUpdateNonces is a free data retrieval call binding the contract method 0xceaa76c0.
//
// Solidity: function checkAndUpdateNonces(uint256 currNonces, uint256 seenNonces, uint256 salt) pure returns(uint256, bool)
func (_StochasticPayVRF *StochasticPayVRFSession) CheckAndUpdateNonces(currNonces *big.Int, seenNonces *big.Int, salt *big.Int) (*big.Int, bool, error) {
	return _StochasticPayVRF.Contract.CheckAndUpdateNonces(&_StochasticPayVRF.CallOpts, currNonces, seenNonces, salt)
}

// CheckAndUpdateNonces is a free data retrieval call binding the contract method 0xceaa76c0.
//
// Solidity: function checkAndUpdateNonces(uint256 currNonces, uint256 seenNonces, uint256 salt) pure returns(uint256, bool)
func (_StochasticPayVRF *StochasticPayVRFCallerSession) CheckAndUpdateNonces(currNonces *big.Int, seenNonces *big.Int, salt *big.Int) (*big.Int, bool, error) {
	return _StochasticPayVRF.Contract.CheckAndUpdateNonces(&_StochasticPayVRF.CallOpts, currNonces, seenNonces, salt)
}

// GetEIP712HashAb is a free data retrieval call binding the contract method 0x0aa0b5ab.
//
// Solidity: function getEIP712Hash_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB) view returns(bytes32)
func (_StochasticPayVRF *StochasticPayVRFCaller) GetEIP712HashAb(opts *bind.CallOpts, payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int) ([32]byte, error) {
	var out []interface{}
	err := _StochasticPayVRF.contract.Call(opts, &out, "getEIP712Hash_ab", payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetEIP712HashAb is a free data retrieval call binding the contract method 0x0aa0b5ab.
//
// Solidity: function getEIP712Hash_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB) view returns(bytes32)
func (_StochasticPayVRF *StochasticPayVRFSession) GetEIP712HashAb(payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int) ([32]byte, error) {
	return _StochasticPayVRF.Contract.GetEIP712HashAb(&_StochasticPayVRF.CallOpts, payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB)
}

// GetEIP712HashAb is a free data retrieval call binding the contract method 0x0aa0b5ab.
//
// Solidity: function getEIP712Hash_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB) view returns(bytes32)
func (_StochasticPayVRF *StochasticPayVRFCallerSession) GetEIP712HashAb(payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int) ([32]byte, error) {
	return _StochasticPayVRF.Contract.GetEIP712HashAb(&_StochasticPayVRF.CallOpts, payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB)
}

// GetEIP712HashSr is a free data retrieval call binding the contract method 0x055c3d76.
//
// Solidity: function getEIP712Hash_sr(uint256 payerSalt_pk0, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount) view returns(bytes32)
func (_StochasticPayVRF *StochasticPayVRFCaller) GetEIP712HashSr(opts *bind.CallOpts, payerSalt_pk0 *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int) ([32]byte, error) {
	var out []interface{}
	err := _StochasticPayVRF.contract.Call(opts, &out, "getEIP712Hash_sr", payerSalt_pk0, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetEIP712HashSr is a free data retrieval call binding the contract method 0x055c3d76.
//
// Solidity: function getEIP712Hash_sr(uint256 payerSalt_pk0, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount) view returns(bytes32)
func (_StochasticPayVRF *StochasticPayVRFSession) GetEIP712HashSr(payerSalt_pk0 *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int) ([32]byte, error) {
	return _StochasticPayVRF.Contract.GetEIP712HashSr(&_StochasticPayVRF.CallOpts, payerSalt_pk0, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount)
}

// GetEIP712HashSr is a free data retrieval call binding the contract method 0x055c3d76.
//
// Solidity: function getEIP712Hash_sr(uint256 payerSalt_pk0, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount) view returns(bytes32)
func (_StochasticPayVRF *StochasticPayVRFCallerSession) GetEIP712HashSr(payerSalt_pk0 *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int) ([32]byte, error) {
	return _StochasticPayVRF.Contract.GetEIP712HashSr(&_StochasticPayVRF.CallOpts, payerSalt_pk0, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount)
}

// GetPayerAb is a free data retrieval call binding the contract method 0x4539b3d9.
//
// Solidity: function getPayer_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB, uint8 v, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRF *StochasticPayVRFCaller) GetPayerAb(opts *bind.CallOpts, payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	var out []interface{}
	err := _StochasticPayVRF.contract.Call(opts, &out, "getPayer_ab", payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB, v, r, s)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPayerAb is a free data retrieval call binding the contract method 0x4539b3d9.
//
// Solidity: function getPayer_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB, uint8 v, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRF *StochasticPayVRFSession) GetPayerAb(payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	return _StochasticPayVRF.Contract.GetPayerAb(&_StochasticPayVRF.CallOpts, payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB, v, r, s)
}

// GetPayerAb is a free data retrieval call binding the contract method 0x4539b3d9.
//
// Solidity: function getPayer_ab(uint256 payerSalt, bytes32 pkHashRoot, uint256 sep20Contract_dueTime64_prob32, uint256 seenNonces, uint256 payeeAddrA_amountA, uint256 amountB, uint8 v, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRF *StochasticPayVRFCallerSession) GetPayerAb(payerSalt *big.Int, pkHashRoot [32]byte, sep20Contract_dueTime64_prob32 *big.Int, seenNonces *big.Int, payeeAddrA_amountA *big.Int, amountB *big.Int, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	return _StochasticPayVRF.Contract.GetPayerAb(&_StochasticPayVRF.CallOpts, payerSalt, pkHashRoot, sep20Contract_dueTime64_prob32, seenNonces, payeeAddrA_amountA, amountB, v, r, s)
}

// GetPayerSr is a free data retrieval call binding the contract method 0xa055fe27.
//
// Solidity: function getPayer_sr(uint256 payerSalt_pk0_v, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRF *StochasticPayVRFCaller) GetPayerSr(opts *bind.CallOpts, payerSalt_pk0_v *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int, r [32]byte, s [32]byte) (common.Address, error) {
	var out []interface{}
	err := _StochasticPayVRF.contract.Call(opts, &out, "getPayer_sr", payerSalt_pk0_v, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount, r, s)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPayerSr is a free data retrieval call binding the contract method 0xa055fe27.
//
// Solidity: function getPayer_sr(uint256 payerSalt_pk0_v, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRF *StochasticPayVRFSession) GetPayerSr(payerSalt_pk0_v *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int, r [32]byte, s [32]byte) (common.Address, error) {
	return _StochasticPayVRF.Contract.GetPayerSr(&_StochasticPayVRF.CallOpts, payerSalt_pk0_v, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount, r, s)
}

// GetPayerSr is a free data retrieval call binding the contract method 0xa055fe27.
//
// Solidity: function getPayer_sr(uint256 payerSalt_pk0_v, uint256 pkTail, uint256 payeeAddr_dueTime64_prob32, uint256 seenNonces, uint256 sep20Contract_amount, bytes32 r, bytes32 s) view returns(address)
func (_StochasticPayVRF *StochasticPayVRFCallerSession) GetPayerSr(payerSalt_pk0_v *big.Int, pkTail *big.Int, payeeAddr_dueTime64_prob32 *big.Int, seenNonces *big.Int, sep20Contract_amount *big.Int, r [32]byte, s [32]byte) (common.Address, error) {
	return _StochasticPayVRF.Contract.GetPayerSr(&_StochasticPayVRF.CallOpts, payerSalt_pk0_v, pkTail, payeeAddr_dueTime64_prob32, seenNonces, sep20Contract_amount, r, s)
}

// Deposit is a paid mutator transaction binding the contract method 0x47e7ef24.
//
// Solidity: function deposit(address owner, uint256 sep20Contract_amount) payable returns()
func (_StochasticPayVRF *StochasticPayVRFTransactor) Deposit(opts *bind.TransactOpts, owner common.Address, sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRF.contract.Transact(opts, "deposit", owner, sep20Contract_amount)
}

// Deposit is a paid mutator transaction binding the contract method 0x47e7ef24.
//
// Solidity: function deposit(address owner, uint256 sep20Contract_amount) payable returns()
func (_StochasticPayVRF *StochasticPayVRFSession) Deposit(owner common.Address, sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.Deposit(&_StochasticPayVRF.TransactOpts, owner, sep20Contract_amount)
}

// Deposit is a paid mutator transaction binding the contract method 0x47e7ef24.
//
// Solidity: function deposit(address owner, uint256 sep20Contract_amount) payable returns()
func (_StochasticPayVRF *StochasticPayVRFTransactorSession) Deposit(owner common.Address, sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.Deposit(&_StochasticPayVRF.TransactOpts, owner, sep20Contract_amount)
}

// GetVrfPubKeyByAddr is a paid mutator transaction binding the contract method 0x6ada3cac.
//
// Solidity: function getVrfPubKeyByAddr(address addr) returns(bytes)
func (_StochasticPayVRF *StochasticPayVRFTransactor) GetVrfPubKeyByAddr(opts *bind.TransactOpts, addr common.Address) (*types.Transaction, error) {
	return _StochasticPayVRF.contract.Transact(opts, "getVrfPubKeyByAddr", addr)
}

// GetVrfPubKeyByAddr is a paid mutator transaction binding the contract method 0x6ada3cac.
//
// Solidity: function getVrfPubKeyByAddr(address addr) returns(bytes)
func (_StochasticPayVRF *StochasticPayVRFSession) GetVrfPubKeyByAddr(addr common.Address) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.GetVrfPubKeyByAddr(&_StochasticPayVRF.TransactOpts, addr)
}

// GetVrfPubKeyByAddr is a paid mutator transaction binding the contract method 0x6ada3cac.
//
// Solidity: function getVrfPubKeyByAddr(address addr) returns(bytes)
func (_StochasticPayVRF *StochasticPayVRFTransactorSession) GetVrfPubKeyByAddr(addr common.Address) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.GetVrfPubKeyByAddr(&_StochasticPayVRF.TransactOpts, addr)
}

// LoadWallet is a paid mutator transaction binding the contract method 0xbd6af867.
//
// Solidity: function loadWallet(bytes keyBz) returns(uint256 nonces, uint256 balance)
func (_StochasticPayVRF *StochasticPayVRFTransactor) LoadWallet(opts *bind.TransactOpts, keyBz []byte) (*types.Transaction, error) {
	return _StochasticPayVRF.contract.Transact(opts, "loadWallet", keyBz)
}

// LoadWallet is a paid mutator transaction binding the contract method 0xbd6af867.
//
// Solidity: function loadWallet(bytes keyBz) returns(uint256 nonces, uint256 balance)
func (_StochasticPayVRF *StochasticPayVRFSession) LoadWallet(keyBz []byte) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.LoadWallet(&_StochasticPayVRF.TransactOpts, keyBz)
}

// LoadWallet is a paid mutator transaction binding the contract method 0xbd6af867.
//
// Solidity: function loadWallet(bytes keyBz) returns(uint256 nonces, uint256 balance)
func (_StochasticPayVRF *StochasticPayVRFTransactorSession) LoadWallet(keyBz []byte) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.LoadWallet(&_StochasticPayVRF.TransactOpts, keyBz)
}

// PayToAB is a paid mutator transaction binding the contract method 0xda990a98.
//
// Solidity: function payToAB(bytes32[] proof, bytes pi, (uint256,uint256,uint256,bytes32,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRF *StochasticPayVRFTransactor) PayToAB(opts *bind.TransactOpts, proof [][32]byte, pi []byte, params StochasticPayVRFParams) (*types.Transaction, error) {
	return _StochasticPayVRF.contract.Transact(opts, "payToAB", proof, pi, params)
}

// PayToAB is a paid mutator transaction binding the contract method 0xda990a98.
//
// Solidity: function payToAB(bytes32[] proof, bytes pi, (uint256,uint256,uint256,bytes32,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRF *StochasticPayVRFSession) PayToAB(proof [][32]byte, pi []byte, params StochasticPayVRFParams) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.PayToAB(&_StochasticPayVRF.TransactOpts, proof, pi, params)
}

// PayToAB is a paid mutator transaction binding the contract method 0xda990a98.
//
// Solidity: function payToAB(bytes32[] proof, bytes pi, (uint256,uint256,uint256,bytes32,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRF *StochasticPayVRFTransactorSession) PayToAB(proof [][32]byte, pi []byte, params StochasticPayVRFParams) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.PayToAB(&_StochasticPayVRF.TransactOpts, proof, pi, params)
}

// PayToSingleReciever is a paid mutator transaction binding the contract method 0x8a694d40.
//
// Solidity: function payToSingleReciever(bytes pi, (uint256,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRF *StochasticPayVRFTransactor) PayToSingleReciever(opts *bind.TransactOpts, pi []byte, params StochasticPayVRFParamsSr) (*types.Transaction, error) {
	return _StochasticPayVRF.contract.Transact(opts, "payToSingleReciever", pi, params)
}

// PayToSingleReciever is a paid mutator transaction binding the contract method 0x8a694d40.
//
// Solidity: function payToSingleReciever(bytes pi, (uint256,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRF *StochasticPayVRFSession) PayToSingleReciever(pi []byte, params StochasticPayVRFParamsSr) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.PayToSingleReciever(&_StochasticPayVRF.TransactOpts, pi, params)
}

// PayToSingleReciever is a paid mutator transaction binding the contract method 0x8a694d40.
//
// Solidity: function payToSingleReciever(bytes pi, (uint256,uint256,uint256,uint256,uint256,bytes32,bytes32) params) returns()
func (_StochasticPayVRF *StochasticPayVRFTransactorSession) PayToSingleReciever(pi []byte, params StochasticPayVRFParamsSr) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.PayToSingleReciever(&_StochasticPayVRF.TransactOpts, pi, params)
}

// RegisterVrfPubKey is a paid mutator transaction binding the contract method 0x5aa8166c.
//
// Solidity: function registerVrfPubKey(bytes vrfPubKey) returns()
func (_StochasticPayVRF *StochasticPayVRFTransactor) RegisterVrfPubKey(opts *bind.TransactOpts, vrfPubKey []byte) (*types.Transaction, error) {
	return _StochasticPayVRF.contract.Transact(opts, "registerVrfPubKey", vrfPubKey)
}

// RegisterVrfPubKey is a paid mutator transaction binding the contract method 0x5aa8166c.
//
// Solidity: function registerVrfPubKey(bytes vrfPubKey) returns()
func (_StochasticPayVRF *StochasticPayVRFSession) RegisterVrfPubKey(vrfPubKey []byte) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.RegisterVrfPubKey(&_StochasticPayVRF.TransactOpts, vrfPubKey)
}

// RegisterVrfPubKey is a paid mutator transaction binding the contract method 0x5aa8166c.
//
// Solidity: function registerVrfPubKey(bytes vrfPubKey) returns()
func (_StochasticPayVRF *StochasticPayVRFTransactorSession) RegisterVrfPubKey(vrfPubKey []byte) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.RegisterVrfPubKey(&_StochasticPayVRF.TransactOpts, vrfPubKey)
}

// UnregisterVrfPubKey is a paid mutator transaction binding the contract method 0x913abde5.
//
// Solidity: function unregisterVrfPubKey() returns()
func (_StochasticPayVRF *StochasticPayVRFTransactor) UnregisterVrfPubKey(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _StochasticPayVRF.contract.Transact(opts, "unregisterVrfPubKey")
}

// UnregisterVrfPubKey is a paid mutator transaction binding the contract method 0x913abde5.
//
// Solidity: function unregisterVrfPubKey() returns()
func (_StochasticPayVRF *StochasticPayVRFSession) UnregisterVrfPubKey() (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.UnregisterVrfPubKey(&_StochasticPayVRF.TransactOpts)
}

// UnregisterVrfPubKey is a paid mutator transaction binding the contract method 0x913abde5.
//
// Solidity: function unregisterVrfPubKey() returns()
func (_StochasticPayVRF *StochasticPayVRFTransactorSession) UnregisterVrfPubKey() (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.UnregisterVrfPubKey(&_StochasticPayVRF.TransactOpts)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 sep20Contract_amount) returns()
func (_StochasticPayVRF *StochasticPayVRFTransactor) Withdraw(opts *bind.TransactOpts, sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRF.contract.Transact(opts, "withdraw", sep20Contract_amount)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 sep20Contract_amount) returns()
func (_StochasticPayVRF *StochasticPayVRFSession) Withdraw(sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.Withdraw(&_StochasticPayVRF.TransactOpts, sep20Contract_amount)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 sep20Contract_amount) returns()
func (_StochasticPayVRF *StochasticPayVRFTransactorSession) Withdraw(sep20Contract_amount *big.Int) (*types.Transaction, error) {
	return _StochasticPayVRF.Contract.Withdraw(&_StochasticPayVRF.TransactOpts, sep20Contract_amount)
}
